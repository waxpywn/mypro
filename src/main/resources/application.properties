#普通的配置信息,中文值会乱码
com.test.properties.value=测试配置文件中的值

#日志配置，logging.level 后面可以根据包路径配置不同资源的log级别
logging.path=/user/local/log
#logging.level.com.favorites=DEBUG
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=ERROR
logging.level.org.springframework.boot.autoconfigure=error
debug=true
#数据源配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root

#jpa操作数据源配置
#hibernate.hbm2ddl.auto参数的作用主要用于：自动创建|更新|验证数据库表结构,有四个值：
#create： 每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
#spring.jpa.properties.hibernate.hbm2ddl.auto=validate
#dialect 主要是指定生成表名的存储引擎为InneoDB
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#show-sql 是否打印出自动生产的SQL，方便调试的时候查看。
#spring.jpa.show-sql=true
#spring.jpa.open-in-view=false

#thymeleaf前端模板
spring.thymeleaf.cache=false

# redis单机应用环境配置
spring.redis.host=127.0.0.1
spring.redis.database=0
spring.redis.port=6379
spring.redis.password=

# redis连接池配置
spring.redis.jedis.pool.max-active=200
spring.redis.jedis.pool.min-idle=20
spring.redis.jedis.pool.max-wait=3000ms

#rabbitMq配置
spring.application.name=spirng-boot-rabbitmq
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/mypro
spring.rabbitmq.username=mypro
spring.rabbitmq.password=mypro